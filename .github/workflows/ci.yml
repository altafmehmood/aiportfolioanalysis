name: CI - Build, Container Security & SARIF Upload

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ${{ secrets.ACR_REGISTRY }}
  ASPNET_IMAGE_NAME: aiportfolioanalysis
  CADDY_IMAGE_NAME: caddy-proxy

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write  # Required for SARIF upload to GitHub Security tab
      actions: read          # Required for accessing workflow run metadata

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Extract ASP.NET metadata
      id: aspnet-meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.ASPNET_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,format=short
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Extract Caddy metadata
      id: caddy-meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.CADDY_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,format=short
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push ASP.NET Docker image
      uses: docker/build-push-action@v5
      id: aspnet-build
      with:
        context: .
        file: ./Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.aspnet-meta.outputs.tags }}
        labels: ${{ steps.aspnet-meta.outputs.labels }}

    - name: Build and push Caddy Docker image
      uses: docker/build-push-action@v5
      id: caddy-build
      with:
        context: .
        file: ./Dockerfile.caddy
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.caddy-meta.outputs.tags }}
        labels: ${{ steps.caddy-meta.outputs.labels }}

    - name: Run security scan on ASP.NET image (PR)
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: ${{ fromJSON(steps.aspnet-meta.outputs.json).tags[0] }}
        format: 'sarif'
        output: 'trivy-aspnet-results.sarif'
      if: github.event_name == 'pull_request'

    - name: Run security scan on Caddy image (PR)
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: ${{ fromJSON(steps.caddy-meta.outputs.json).tags[0] }}
        format: 'sarif'
        output: 'trivy-caddy-results.sarif'
      if: github.event_name == 'pull_request'

    - name: Run security scan on ASP.NET image (Push)
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: ${{ fromJSON(steps.aspnet-meta.outputs.json).tags[0] }}
        format: 'sarif'
        output: 'trivy-aspnet-results.sarif'
      if: github.event_name != 'pull_request'

    - name: Run security scan on Caddy image (Push)
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: ${{ fromJSON(steps.caddy-meta.outputs.json).tags[0] }}
        format: 'sarif'
        output: 'trivy-caddy-results.sarif'
      if: github.event_name != 'pull_request'

    - name: Upload ASP.NET Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-aspnet-results.sarif'
      continue-on-error: true
      if: always() && hashFiles('trivy-aspnet-results.sarif') != ''

    - name: Upload Caddy Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-caddy-results.sarif'
      continue-on-error: true
      if: always() && hashFiles('trivy-caddy-results.sarif') != ''

    - name: Archive security scan results
      uses: actions/upload-artifact@v4
      with:
        name: trivy-security-scan-results
        path: |
          trivy-aspnet-results.sarif
          trivy-caddy-results.sarif
        retention-days: 30
      if: always() && (hashFiles('trivy-aspnet-results.sarif') != '' || hashFiles('trivy-caddy-results.sarif') != '')

    - name: Display security scan info
      run: |
        aspnet_scan_exists=false
        caddy_scan_exists=false
        
        if [ -f "trivy-aspnet-results.sarif" ]; then
          aspnet_scan_exists=true
          echo "üîç ASP.NET security scan completed successfully"
          echo "üìÑ ASP.NET SARIF report: trivy-aspnet-results.sarif"
        fi
        
        if [ -f "trivy-caddy-results.sarif" ]; then
          caddy_scan_exists=true
          echo "üîç Caddy security scan completed successfully"
          echo "üìÑ Caddy SARIF report: trivy-caddy-results.sarif"
        fi
        
        if [ "$aspnet_scan_exists" = true ] || [ "$caddy_scan_exists" = true ]; then
          echo ""
          echo "üìä To enable automatic security alerts in GitHub:"
          echo "1. Go to repository Settings ‚Üí Security & analysis"
          echo "2. Enable 'Code scanning alerts'"
          echo "3. Security scan results will appear in the Security tab"
          echo ""
          echo "üìÅ Security scan results are available as build artifacts"
        else
          echo "‚ùå No security scans completed successfully"
        fi
      if: always()