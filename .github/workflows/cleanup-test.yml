name: Cleanup Test Environment - Remove Containers for Deleted Branches

on:
  delete:
    branches: [ 'feature/**' ]

env:
  RESOURCE_GROUP: ${{ secrets.TEST_RESOURCE_GROUP }}

jobs:
  cleanup-test-environment:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Extract branch name and determine container to cleanup
      id: vars
      run: |
        # Get the deleted branch name
        DELETED_BRANCH="${{ github.event.ref }}"
        echo "Deleted branch: $DELETED_BRANCH"
        
        # Clean branch name for DNS (remove feature/ prefix, replace special chars)
        CLEAN_BRANCH=$(echo "$DELETED_BRANCH" | sed 's/^feature\///' | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
        
        # Limit length for DNS compatibility
        if [ ${#CLEAN_BRANCH} -gt 20 ]; then
          CLEAN_BRANCH="${CLEAN_BRANCH:0:20}"
        fi
        
        ACI_NAME="test-$CLEAN_BRANCH"
        
        echo "branch_name=$DELETED_BRANCH" >> $GITHUB_OUTPUT
        echo "aci_name=$ACI_NAME" >> $GITHUB_OUTPUT
        echo "clean_branch=$CLEAN_BRANCH" >> $GITHUB_OUTPUT

    - name: Cleanup test container
      run: |
        ACI_NAME="${{ steps.vars.outputs.aci_name }}"
        
        echo "Checking for test container: $ACI_NAME"
        
        # Check if container exists
        if az container show --resource-group ${{ env.RESOURCE_GROUP }} --name "$ACI_NAME" > /dev/null 2>&1; then
          echo "🗑️ Deleting test container: $ACI_NAME"
          az container delete --resource-group ${{ env.RESOURCE_GROUP }} --name "$ACI_NAME" --yes
          
          # Wait for deletion to complete
          echo "⏳ Waiting for deletion to complete..."
          sleep 10
          
          # Verify deletion
          if ! az container show --resource-group ${{ env.RESOURCE_GROUP }} --name "$ACI_NAME" > /dev/null 2>&1; then
            echo "✅ Successfully deleted test container: $ACI_NAME"
          else
            echo "⚠️ Container deletion may still be in progress"
          fi
        else
          echo "ℹ️ No test container found for branch: ${{ steps.vars.outputs.branch_name }}"
          echo "   Expected container name: $ACI_NAME"
        fi

    - name: List remaining test containers
      run: |
        echo "📋 Remaining test containers in ${{ env.RESOURCE_GROUP }}:"
        az container list --resource-group ${{ env.RESOURCE_GROUP }} --query "[?starts_with(name, 'test-')].{Name: name, State: instanceView.state, FQDN: ipAddress.fqdn}" --output table || echo "No containers found or error occurred"

    - name: Create cleanup summary
      run: |
        echo "## 🧹 Test Environment Cleanup Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Deleted Branch**: ${{ steps.vars.outputs.branch_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Container Name**: ${{ steps.vars.outputs.aci_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Cleanup completed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Test environment resources for this feature branch have been cleaned up." >> $GITHUB_STEP_SUMMARY